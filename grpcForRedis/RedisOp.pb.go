// Code generated by protoc-gen-go. DO NOT EDIT.
// source: RedisOp.proto

package grpcForRedis

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Tuid struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tuid) Reset()         { *m = Tuid{} }
func (m *Tuid) String() string { return proto.CompactTextString(m) }
func (*Tuid) ProtoMessage()    {}
func (*Tuid) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5f8fbf95524e059, []int{0}
}

func (m *Tuid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tuid.Unmarshal(m, b)
}
func (m *Tuid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tuid.Marshal(b, m, deterministic)
}
func (m *Tuid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tuid.Merge(m, src)
}
func (m *Tuid) XXX_Size() int {
	return xxx_messageInfo_Tuid.Size(m)
}
func (m *Tuid) XXX_DiscardUnknown() {
	xxx_messageInfo_Tuid.DiscardUnknown(m)
}

var xxx_messageInfo_Tuid proto.InternalMessageInfo

func (m *Tuid) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type TaInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Passwd               string   `protobuf:"bytes,2,opt,name=Passwd,proto3" json:"Passwd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaInfo) Reset()         { *m = TaInfo{} }
func (m *TaInfo) String() string { return proto.CompactTextString(m) }
func (*TaInfo) ProtoMessage()    {}
func (*TaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5f8fbf95524e059, []int{1}
}

func (m *TaInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaInfo.Unmarshal(m, b)
}
func (m *TaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaInfo.Marshal(b, m, deterministic)
}
func (m *TaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaInfo.Merge(m, src)
}
func (m *TaInfo) XXX_Size() int {
	return xxx_messageInfo_TaInfo.Size(m)
}
func (m *TaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TaInfo proto.InternalMessageInfo

func (m *TaInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TaInfo) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

type ItemInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Passwd               string   `protobuf:"bytes,2,opt,name=Passwd,proto3" json:"Passwd,omitempty"`
	Duration             int64    `protobuf:"varint,3,opt,name=Duration,proto3" json:"Duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItemInfo) Reset()         { *m = ItemInfo{} }
func (m *ItemInfo) String() string { return proto.CompactTextString(m) }
func (*ItemInfo) ProtoMessage()    {}
func (*ItemInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5f8fbf95524e059, []int{2}
}

func (m *ItemInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItemInfo.Unmarshal(m, b)
}
func (m *ItemInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItemInfo.Marshal(b, m, deterministic)
}
func (m *ItemInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemInfo.Merge(m, src)
}
func (m *ItemInfo) XXX_Size() int {
	return xxx_messageInfo_ItemInfo.Size(m)
}
func (m *ItemInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ItemInfo proto.InternalMessageInfo

func (m *ItemInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ItemInfo) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

func (m *ItemInfo) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func init() {
	proto.RegisterType((*Tuid)(nil), "grpcForRedis.Tuid")
	proto.RegisterType((*TaInfo)(nil), "grpcForRedis.TaInfo")
	proto.RegisterType((*ItemInfo)(nil), "grpcForRedis.ItemInfo")
}

func init() { proto.RegisterFile("RedisOp.proto", fileDescriptor_b5f8fbf95524e059) }

var fileDescriptor_b5f8fbf95524e059 = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x0d, 0x4a, 0x4d, 0xc9,
	0x2c, 0xf6, 0x2f, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x49, 0x2f, 0x2a, 0x48, 0x76,
	0xcb, 0x2f, 0x02, 0x8b, 0x2a, 0x49, 0x70, 0xb1, 0x84, 0x94, 0x66, 0xa6, 0x08, 0x09, 0x70, 0x31,
	0x87, 0x66, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0x98, 0x4a, 0x26, 0x5c, 0x6c,
	0x21, 0x89, 0x9e, 0x79, 0x69, 0xf9, 0x42, 0x42, 0x5c, 0x2c, 0x7e, 0x89, 0xb9, 0xa9, 0x50, 0x49,
	0x30, 0x5b, 0x48, 0x8c, 0x8b, 0x2d, 0x20, 0xb1, 0xb8, 0xb8, 0x3c, 0x45, 0x82, 0x09, 0x2c, 0x0a,
	0xe5, 0x29, 0x05, 0x71, 0x71, 0x78, 0x96, 0xa4, 0xe6, 0x92, 0xaa, 0x4f, 0x48, 0x8a, 0x8b, 0xc3,
	0xa5, 0xb4, 0x28, 0xb1, 0x24, 0x33, 0x3f, 0x4f, 0x82, 0x59, 0x81, 0x51, 0x83, 0x39, 0x08, 0xce,
	0x37, 0xaa, 0xe5, 0x62, 0x87, 0x7a, 0x41, 0xc8, 0x94, 0x8b, 0xdd, 0x3d, 0xb5, 0xc4, 0xb1, 0xb4,
	0x24, 0x43, 0x48, 0x48, 0x0f, 0xd9, 0x23, 0x7a, 0x20, 0x5f, 0x48, 0x89, 0xa0, 0x89, 0x81, 0xdd,
	0xaf, 0xc4, 0x20, 0x64, 0xcd, 0xc5, 0x1d, 0x0c, 0xd1, 0x06, 0x76, 0x98, 0x18, 0xaa, 0x32, 0x98,
	0x83, 0xa5, 0xb0, 0x18, 0xa9, 0xc4, 0x90, 0xc4, 0x06, 0x0e, 0x37, 0x63, 0x40, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xf6, 0x2c, 0x33, 0xcf, 0x48, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RedisOpClient is the client API for RedisOp service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RedisOpClient interface {
	GetAuth(ctx context.Context, in *Tuid, opts ...grpc.CallOption) (*TaInfo, error)
	SetAuthInfo(ctx context.Context, in *ItemInfo, opts ...grpc.CallOption) (*Tuid, error)
}

type redisOpClient struct {
	cc *grpc.ClientConn
}

func NewRedisOpClient(cc *grpc.ClientConn) RedisOpClient {
	return &redisOpClient{cc}
}

func (c *redisOpClient) GetAuth(ctx context.Context, in *Tuid, opts ...grpc.CallOption) (*TaInfo, error) {
	out := new(TaInfo)
	err := c.cc.Invoke(ctx, "/grpcForRedis.RedisOp/GetAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *redisOpClient) SetAuthInfo(ctx context.Context, in *ItemInfo, opts ...grpc.CallOption) (*Tuid, error) {
	out := new(Tuid)
	err := c.cc.Invoke(ctx, "/grpcForRedis.RedisOp/SetAuthInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RedisOpServer is the server API for RedisOp service.
type RedisOpServer interface {
	GetAuth(context.Context, *Tuid) (*TaInfo, error)
	SetAuthInfo(context.Context, *ItemInfo) (*Tuid, error)
}

// UnimplementedRedisOpServer can be embedded to have forward compatible implementations.
type UnimplementedRedisOpServer struct {
}

func (*UnimplementedRedisOpServer) GetAuth(ctx context.Context, req *Tuid) (*TaInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuth not implemented")
}
func (*UnimplementedRedisOpServer) SetAuthInfo(ctx context.Context, req *ItemInfo) (*Tuid, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAuthInfo not implemented")
}

func RegisterRedisOpServer(s *grpc.Server, srv RedisOpServer) {
	s.RegisterService(&_RedisOp_serviceDesc, srv)
}

func _RedisOp_GetAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tuid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RedisOpServer).GetAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcForRedis.RedisOp/GetAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RedisOpServer).GetAuth(ctx, req.(*Tuid))
	}
	return interceptor(ctx, in, info, handler)
}

func _RedisOp_SetAuthInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RedisOpServer).SetAuthInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcForRedis.RedisOp/SetAuthInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RedisOpServer).SetAuthInfo(ctx, req.(*ItemInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _RedisOp_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcForRedis.RedisOp",
	HandlerType: (*RedisOpServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAuth",
			Handler:    _RedisOp_GetAuth_Handler,
		},
		{
			MethodName: "SetAuthInfo",
			Handler:    _RedisOp_SetAuthInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "RedisOp.proto",
}
